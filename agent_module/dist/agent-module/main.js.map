{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addAccommodation/addAccommodation.css","webpack:///./src/app/addAccommodation/addAccommodation.html","webpack:///./src/app/addAccommodation/addAccommodation.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,4BAA4B,gCAAgC,yBAAyB,oBAAoB,iBAAiB,uBAAuB,KAAK,mDAAmD,oBAAoB,kBAAkB,sBAAsB,2BAA2B,gCAAgC,KAAK,uFAAuF,gCAAgC,KAAK,sDAAsD,oBAAoB,KAAK,8EAA8E,mBAAmB,kBAAkB,oBAAoB,gCAAgC,mBAAmB,0BAA0B,4BAA4B,mBAAmB,KAAK,yDAAyD,iBAAiB,KAAK,+EAA+E,gCAAgC,KAAK,K;;;;;;;;;;;ACA39B,osCAAosC,oCAAoC,gTAAgT,gBAAgB,+K;;;;;;;;;;;;;;;;;;;;;ACA9/C;AAO1C;IAAA;IACA,CAAC;IADY,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;OACW,yBAAyB,CACrC;IAAD,gCAAC;CAAA;AADqC;;;;;;;;;;;;;;;;;;;;;;;;ACPG;AACc;AACyB;AAChF,IAAM,MAAM,GAAW;IACvB,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,4FAAyB,EAAE;CACnE,CAAC;AAMN;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACX7B,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEgB;AACV;AACiC;AAahF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,4FAAyB;aAC1B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;AClBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#regForm {\\r\\n  background-color: #ffffff;\\r\\n  margin: 100px auto;\\r\\n  padding: 40px;\\r\\n  width: 70%;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n/* Style the input fields */\\r\\n\\r\\ninput {\\r\\n  padding: 10px;\\r\\n  width: 100%;\\r\\n  font-size: 17px;\\r\\n  font-family: Raleway;\\r\\n  border: 1px solid #aaaaaa;\\r\\n}\\r\\n\\r\\n/* Mark input boxes that gets an error on validation: */\\r\\n\\r\\ninput.invalid {\\r\\n  background-color: #ffdddd;\\r\\n}\\r\\n\\r\\n/* Hide all steps by default: */\\r\\n\\r\\n.tab {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/* Make circles that indicate the steps of the form: */\\r\\n\\r\\n.step {\\r\\n  height: 15px;\\r\\n  width: 15px;\\r\\n  margin: 0 2px;\\r\\n  background-color: #bbbbbb;\\r\\n  border: none; \\r\\n  border-radius: 50%;\\r\\n  display: inline-block;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n/* Mark the active step: */\\r\\n\\r\\n.step.active {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n/* Mark the steps that are finished and valid: */\\r\\n\\r\\n.step.finish {\\r\\n  background-color: #4CAF50;\\r\\n}\\r\\n\"","module.exports = \"<form id=\\\"regForm\\\" action=\\\"/action_page.php\\\">\\r\\n  <h1>Register:</h1>\\r\\n  <!-- One \\\"tab\\\" for each step in the form: -->\\r\\n  <div class=\\\"tab\\\">Name:\\r\\n    <p><input placeholder=\\\"First name...\\\" oninput=\\\"this.className = ''\\\" name=\\\"fname\\\"></p>\\r\\n    <p><input placeholder=\\\"Last name...\\\" oninput=\\\"this.className = ''\\\" name=\\\"lname\\\"></p>\\r\\n  </div>\\r\\n  <div class=\\\"tab\\\">Contact Info:\\r\\n    <p><input placeholder=\\\"E-mail...\\\" oninput=\\\"this.className = ''\\\" name=\\\"email\\\"></p>\\r\\n    <p><input placeholder=\\\"Phone...\\\" oninput=\\\"this.className = ''\\\" name=\\\"phone\\\"></p>\\r\\n  </div>\\r\\n  <div class=\\\"tab\\\">Birthday:\\r\\n    <p><input placeholder=\\\"dd\\\" oninput=\\\"this.className = ''\\\" name=\\\"dd\\\"></p>\\r\\n    <p><input placeholder=\\\"mm\\\" oninput=\\\"this.className = ''\\\" name=\\\"nn\\\"></p>\\r\\n    <p><input placeholder=\\\"yyyy\\\" oninput=\\\"this.className = ''\\\" name=\\\"yyyy\\\"></p>\\r\\n  </div>\\r\\n  <div class=\\\"tab\\\">Login Info:\\r\\n    <p><input placeholder=\\\"Username...\\\" oninput=\\\"this.className = ''\\\" name=\\\"uname\\\"></p>\\r\\n    <p><input placeholder=\\\"Password...\\\" oninput=\\\"this.className = ''\\\" name=\\\"pword\\\" type=\\\"password\\\"></p>\\r\\n  </div>\\r\\n  <div style=\\\"overflow:auto;\\\">\\r\\n    <div style=\\\"float:right;\\\">\\r\\n      <button type=\\\"button\\\" id=\\\"prevBtn\\\" onclick=\\\"nextPrev(-1)\\\">Previous</button>\\r\\n      <button type=\\\"button\\\" id=\\\"nextBtn\\\" onclick=\\\"nextPrev(1)\\\">Next</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Circles which indicates the steps of the form: -->\\r\\n  <div style=\\\"text-align:center;margin-top:40px;\\\">\\r\\n    <span class=\\\"step\\\"></span>\\r\\n    <span class=\\\"step\\\"></span>\\r\\n    <span class=\\\"step\\\"></span>\\r\\n    <span class=\\\"step\\\"></span>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-addAccommodation',\r\n  templateUrl: './addAccommodation.html',\r\n  styleUrls: ['./addAccommodation.css']\r\n})\r\nexport class AddAccommodationComponent {\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddAccommodationComponent } from './addAccommodation/addAccommodation';\r\nconst routes: Routes = [\r\n{ path: 'agent/addAccommodation', component: AddAccommodationComponent },\r\n    ];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'agent-module';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes, provideRoutes } from '@angular/router';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddAccommodationComponent } from './addAccommodation/addAccommodation';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddAccommodationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}